"use strict";
var echarts = require('./ec-canvas/echarts');
Component({
    properties: {
        mapType: {
            type: String,
            default: ''
        },
        mapOption: {
            type: Object,
            default: {}
        },
        mapData: {
            type: Object,
            default: null,
            observer: function () {
                if (this.data.chartReady) {
                    this.updateChart();
                }
                else if (this.data.mapData && this.data.mapData.features) {
                    this.initChart();
                }
            }
        }
    },
    data: {
        ec: {},
        chartReady: false,
        chart: null
    },
    methods: {
        initChart: function () {
            this.setData({
                chartReady: true,
                ec: {
                    onInit: this.setChart()
                }
            });
        },
        setChart: function () {
            var _this = this;
            var init = function (canvas, width, height, dpr) {
                var chart = echarts.init(canvas, null, {
                    width: width,
                    height: height,
                    devicePixelRatio: dpr,
                    renderer: 'canvas'
                });
                canvas.setChart(_this.data.chart);
                echarts.registerMap(_this.data.mapType, _this.data.mapData);
                chart.setOption(_this.data.mapOption);
                _this.data.chart = chart;
                return chart;
            };
            return init;
        },
        updateChart: function () {
            if (this.data.chart) {
                echarts.registerMap(this.data.mapType, this.data.mapData);
                this.data.chart.setOption(this.data.mapOption);
            }
        }
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLXZpZXcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJtYXAtdmlldy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLHFCQUFxQixDQUFDLENBQUE7QUFFOUMsU0FBUyxDQUFDO0lBQ04sVUFBVSxFQUFFO1FBQ1IsT0FBTyxFQUFFO1lBQ0wsSUFBSSxFQUFFLE1BQU07WUFDWixPQUFPLEVBQUUsRUFBRTtTQUNkO1FBQ0QsU0FBUyxFQUFFO1lBQ1AsSUFBSSxFQUFFLE1BQU07WUFDWixPQUFPLEVBQUUsRUFBRTtTQUNkO1FBQ0QsT0FBTyxFQUFFO1lBQ0wsSUFBSSxFQUFFLE1BQU07WUFDWixPQUFPLEVBQUUsSUFBSTtZQUNiLFFBQVE7Z0JBQ0osSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRTtvQkFDdEIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFBO2lCQUNyQjtxQkFBTSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRTtvQkFDeEQsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFBO2lCQUNuQjtZQUNMLENBQUM7U0FDSjtLQUNKO0lBQ0QsSUFBSSxFQUFFO1FBQ0YsRUFBRSxFQUFFLEVBQUU7UUFDTixVQUFVLEVBQUUsS0FBSztRQUNqQixLQUFLLEVBQUUsSUFBVztLQUNyQjtJQUNELE9BQU8sRUFBRTtRQUVMLFNBQVM7WUFDTCxJQUFJLENBQUMsT0FBTyxDQUFDO2dCQUNULFVBQVUsRUFBRSxJQUFJO2dCQUNoQixFQUFFLEVBQUU7b0JBQ0EsTUFBTSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUU7aUJBQzFCO2FBQ0osQ0FBQyxDQUFBO1FBQ04sQ0FBQztRQUVELFFBQVEsRUFBUjtZQUFBLGlCQWVDO1lBZEcsSUFBTSxJQUFJLEdBQUcsVUFBQyxNQUFVLEVBQUUsS0FBWSxFQUFFLE1BQWEsRUFBRSxHQUFVO2dCQUM3RCxJQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUU7b0JBQ3JDLEtBQUssRUFBRSxLQUFLO29CQUNaLE1BQU0sRUFBRSxNQUFNO29CQUNkLGdCQUFnQixFQUFFLEdBQUc7b0JBQ3JCLFFBQVEsRUFBRSxRQUFRO2lCQUNyQixDQUFDLENBQUM7Z0JBQ0gsTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFBO2dCQUNoQyxPQUFPLENBQUMsV0FBVyxDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7Z0JBQ3pELEtBQUssQ0FBQyxTQUFTLENBQUMsS0FBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQTtnQkFDcEMsS0FBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFBO2dCQUN2QixPQUFPLEtBQUssQ0FBQTtZQUNoQixDQUFDLENBQUE7WUFDRCxPQUFPLElBQUksQ0FBQTtRQUNmLENBQUM7UUFDRCxXQUFXO1lBQ1AsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtnQkFDakIsT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFBO2dCQUN6RCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQTthQUNqRDtRQUNMLENBQUM7S0FDSjtDQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGVjaGFydHMgPSByZXF1aXJlKCcuL2VjLWNhbnZhcy9lY2hhcnRzJylcblxuQ29tcG9uZW50KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgIG1hcFR5cGU6IHtcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICAgIGRlZmF1bHQ6ICcnXG4gICAgICAgIH0sIFxuICAgICAgICBtYXBPcHRpb246IHtcbiAgICAgICAgICAgIHR5cGU6IE9iamVjdCxcbiAgICAgICAgICAgIGRlZmF1bHQ6IHt9XG4gICAgICAgIH0sXG4gICAgICAgIG1hcERhdGE6IHtcbiAgICAgICAgICAgIHR5cGU6IE9iamVjdCxcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICBvYnNlcnZlcigpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5kYXRhLmNoYXJ0UmVhZHkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVDaGFydCgpXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmRhdGEubWFwRGF0YSAmJiB0aGlzLmRhdGEubWFwRGF0YS5mZWF0dXJlcykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmluaXRDaGFydCgpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcbiAgICBkYXRhOiB7XG4gICAgICAgIGVjOiB7fSxcbiAgICAgICAgY2hhcnRSZWFkeTogZmFsc2UsXG4gICAgICAgIGNoYXJ0OiBudWxsIGFzIGFueVxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgICAvLyDliJ3lp4vljJblnLDlm75cbiAgICAgICAgaW5pdENoYXJ0KCkge1xuICAgICAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgICAgICBjaGFydFJlYWR5OiB0cnVlLFxuICAgICAgICAgICAgICAgIGVjOiB7XG4gICAgICAgICAgICAgICAgICAgIG9uSW5pdDogdGhpcy5zZXRDaGFydCgpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSxcbiAgICAgICAgLy8g6K6+572u5rOo5YaM5Zyw5Zu+XG4gICAgICAgIHNldENoYXJ0KCkge1xuICAgICAgICAgICAgY29uc3QgaW5pdCA9IChjYW52YXM6YW55LCB3aWR0aDpudW1iZXIsIGhlaWdodDpudW1iZXIsIGRwcjpudW1iZXIpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBjaGFydCA9IGVjaGFydHMuaW5pdChjYW52YXMsIG51bGwsIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICAgICAgICAgICAgICAgICAgZGV2aWNlUGl4ZWxSYXRpbzogZHByLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXJlcjogJ2NhbnZhcydcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjYW52YXMuc2V0Q2hhcnQodGhpcy5kYXRhLmNoYXJ0KVxuICAgICAgICAgICAgICAgIGVjaGFydHMucmVnaXN0ZXJNYXAodGhpcy5kYXRhLm1hcFR5cGUsIHRoaXMuZGF0YS5tYXBEYXRhKVxuICAgICAgICAgICAgICAgIGNoYXJ0LnNldE9wdGlvbih0aGlzLmRhdGEubWFwT3B0aW9uKVxuICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5jaGFydCA9IGNoYXJ0XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNoYXJ0XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaW5pdFxuICAgICAgICB9LFxuICAgICAgICB1cGRhdGVDaGFydCgpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmRhdGEuY2hhcnQpIHtcbiAgICAgICAgICAgICAgICBlY2hhcnRzLnJlZ2lzdGVyTWFwKHRoaXMuZGF0YS5tYXBUeXBlLCB0aGlzLmRhdGEubWFwRGF0YSlcbiAgICAgICAgICAgICAgICB0aGlzLmRhdGEuY2hhcnQuc2V0T3B0aW9uKHRoaXMuZGF0YS5tYXBPcHRpb24pXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxufSk7XG4iXX0=
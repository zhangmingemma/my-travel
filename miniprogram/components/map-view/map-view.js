"use strict";
var echarts = require('./ec-canvas/echarts');
Component({
    properties: {
        mapType: {
            type: String,
            default: ''
        },
        mapOption: {
            type: Object,
            default: {}
        },
        mapData: {
            type: Object,
            default: null,
            observer: function () {
                if (this.data.mapData && this.data.mapData.features) {
                    this.initChart();
                }
            }
        }
    },
    data: {
        ec: {},
        chartReady: false
    },
    methods: {
        initChart: function () {
            this.setData({
                chartReady: true,
                ec: {
                    onInit: this.setChart()
                }
            });
        },
        setChart: function () {
            var _this = this;
            var init = function (canvas, width, height, dpr) {
                var chart = echarts.init(canvas, null, {
                    width: width,
                    height: height,
                    devicePixelRatio: dpr,
                    renderer: 'canvas'
                });
                canvas.setChart(chart);
                echarts.registerMap(_this.data.mapType, _this.data.mapData);
                chart.setOption(_this.data.mapOption);
                return chart;
            };
            return init;
        }
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLXZpZXcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJtYXAtdmlldy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLHFCQUFxQixDQUFDLENBQUE7QUFFOUMsU0FBUyxDQUFDO0lBQ04sVUFBVSxFQUFFO1FBQ1IsT0FBTyxFQUFFO1lBQ0wsSUFBSSxFQUFFLE1BQU07WUFDWixPQUFPLEVBQUUsRUFBRTtTQUNkO1FBQ0QsU0FBUyxFQUFFO1lBQ1AsSUFBSSxFQUFFLE1BQU07WUFDWixPQUFPLEVBQUUsRUFBRTtTQUNkO1FBQ0QsT0FBTyxFQUFFO1lBQ0wsSUFBSSxFQUFFLE1BQU07WUFDWixPQUFPLEVBQUUsSUFBSTtZQUNiLFFBQVE7Z0JBQ0osSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUU7b0JBQ2pELElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQTtpQkFDbkI7WUFDTCxDQUFDO1NBQ0o7S0FDSjtJQUNELElBQUksRUFBRTtRQUNGLEVBQUUsRUFBRSxFQUFFO1FBQ04sVUFBVSxFQUFFLEtBQUs7S0FDcEI7SUFDRCxPQUFPLEVBQUU7UUFFTCxTQUFTO1lBQ0wsSUFBSSxDQUFDLE9BQU8sQ0FBQztnQkFDVCxVQUFVLEVBQUUsSUFBSTtnQkFDaEIsRUFBRSxFQUFFO29CQUNBLE1BQU0sRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFO2lCQUMxQjthQUNKLENBQUMsQ0FBQTtRQUNOLENBQUM7UUFFRCxRQUFRLEVBQVI7WUFBQSxpQkFjQztZQWJHLElBQU0sSUFBSSxHQUFHLFVBQUMsTUFBVSxFQUFFLEtBQVksRUFBRSxNQUFhLEVBQUUsR0FBVTtnQkFDN0QsSUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFO29CQUNyQyxLQUFLLEVBQUUsS0FBSztvQkFDWixNQUFNLEVBQUUsTUFBTTtvQkFDZCxnQkFBZ0IsRUFBRSxHQUFHO29CQUNyQixRQUFRLEVBQUUsUUFBUTtpQkFDckIsQ0FBQyxDQUFDO2dCQUNILE1BQU0sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUE7Z0JBQ3RCLE9BQU8sQ0FBQyxXQUFXLENBQUMsS0FBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQTtnQkFDekQsS0FBSyxDQUFDLFNBQVMsQ0FBQyxLQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO2dCQUNwQyxPQUFPLEtBQUssQ0FBQTtZQUNoQixDQUFDLENBQUE7WUFDRCxPQUFPLElBQUksQ0FBQTtRQUNmLENBQUM7S0FDSjtDQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGVjaGFydHMgPSByZXF1aXJlKCcuL2VjLWNhbnZhcy9lY2hhcnRzJylcblxuQ29tcG9uZW50KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgIG1hcFR5cGU6IHtcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICAgIGRlZmF1bHQ6ICcnXG4gICAgICAgIH0sIFxuICAgICAgICBtYXBPcHRpb246IHtcbiAgICAgICAgICAgIHR5cGU6IE9iamVjdCxcbiAgICAgICAgICAgIGRlZmF1bHQ6IHt9XG4gICAgICAgIH0sXG4gICAgICAgIG1hcERhdGE6IHtcbiAgICAgICAgICAgIHR5cGU6IE9iamVjdCxcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICBvYnNlcnZlcigpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5kYXRhLm1hcERhdGEgJiYgdGhpcy5kYXRhLm1hcERhdGEuZmVhdHVyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbml0Q2hhcnQoKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG4gICAgZGF0YToge1xuICAgICAgICBlYzoge30sXG4gICAgICAgIGNoYXJ0UmVhZHk6IGZhbHNlXG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICAgIC8vIOWIneWni+WMluWcsOWbvlxuICAgICAgICBpbml0Q2hhcnQoKSB7XG4gICAgICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgICAgIGNoYXJ0UmVhZHk6IHRydWUsXG4gICAgICAgICAgICAgICAgZWM6IHtcbiAgICAgICAgICAgICAgICAgICAgb25Jbml0OiB0aGlzLnNldENoYXJ0KClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9LFxuICAgICAgICAvLyDorr7nva7ms6jlhozlnLDlm75cbiAgICAgICAgc2V0Q2hhcnQoKSB7XG4gICAgICAgICAgICBjb25zdCBpbml0ID0gKGNhbnZhczphbnksIHdpZHRoOm51bWJlciwgaGVpZ2h0Om51bWJlciwgZHByOm51bWJlcikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNoYXJ0ID0gZWNoYXJ0cy5pbml0KGNhbnZhcywgbnVsbCwge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogd2lkdGgsXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogaGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgICBkZXZpY2VQaXhlbFJhdGlvOiBkcHIsXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcmVyOiAnY2FudmFzJ1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNhbnZhcy5zZXRDaGFydChjaGFydClcbiAgICAgICAgICAgICAgICBlY2hhcnRzLnJlZ2lzdGVyTWFwKHRoaXMuZGF0YS5tYXBUeXBlLCB0aGlzLmRhdGEubWFwRGF0YSlcbiAgICAgICAgICAgICAgICBjaGFydC5zZXRPcHRpb24odGhpcy5kYXRhLm1hcE9wdGlvbilcbiAgICAgICAgICAgICAgICByZXR1cm4gY2hhcnRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBpbml0XG4gICAgICAgIH1cbiAgICB9LFxufSk7XG4iXX0=